{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shmaj\\\\CodeFellows\\\\401\\\\401n16\\\\ReactNative\\\\app\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Note from \"./Note\";\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      noteArray: [],\n      notetext: ','\n    };\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"storage\",\n    value: function storage() {\n      var notes;\n      return _regeneratorRuntime.async(function storage$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('notes'));\n\n            case 2:\n              notes = _context.sent;\n\n              if (notes && notes.length > 0) {\n                this.setState({\n                  notes: JSON.parse(notes)\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var notes = this.state.noteArray.map(function (val, key) {\n        return React.createElement(Note, {\n          key: key,\n          keyval: key,\n          val: val,\n          deleteMethod: function deleteMethod() {\n            return _this2.deleteNote(key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 14\n          }\n        });\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.headerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"Add Notes\")), React.createElement(ScrollView, {\n        style: styles.scrollContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, notes), React.createElement(View, {\n        style: styles.footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        onChangeText: function onChangeText(noteText) {\n          return _this2.setState({\n            noteText: noteText\n          });\n        },\n        value: this.state.noteText,\n        style: styles.textInput,\n        placeholder: \"your notes\",\n        placeholderTextColor: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: this.addNote.bind(this),\n        style: styles.addButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.addButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, \"+\")));\n    }\n  }, {\n    key: \"addNote\",\n    value: function addNote() {\n      if (this.state.notetext) {\n        var d = new Date();\n        this.state.noteArray.push({\n          'date': d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate(),\n          'note': this.state.noteText\n        });\n        this.setState({\n          noteArray: this.state.noteArray\n        });\n        this.setState({\n          noteText: ''\n        });\n      }\n    }\n  }, {\n    key: \"deleteNote\",\n    value: function deleteNote(key) {\n      this.state.noteArray.splice(key, 1);\n      this.setState({\n        noteArray: this.state.noteArray\n      });\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport { Main as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    backgroundColor: 'grey',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderBottomWidth: 10,\n    borderBottomColor: '#add'\n  },\n  headerText: {\n    color: 'white',\n    fontSize: 18,\n    padding: 26\n  },\n  scrollContainer: {\n    flex: 1,\n    marginBottom: 100\n  },\n  footer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    zIndex: 10\n  },\n  textInput: {\n    alignSelf: 'stretch',\n    color: '#fff',\n    padding: 20,\n    backgroundColor: '#252525',\n    borderTopWidth: 2,\n    borderTopColor: '#ededed'\n  },\n  addButton: {\n    position: 'absolute',\n    zIndex: 11,\n    right: 20,\n    bottom: 90,\n    backgroundColor: '#E91E63',\n    width: 90,\n    height: 90,\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 8\n  },\n  addButtonText: {\n    color: '#fff',\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["C:/Users/shmaj/CodeFellows/401/401n16/ReactNative/app/components/Main.js"],"names":["React","Note","Main","props","state","noteArray","notetext","AsyncStorage","getItem","notes","length","setState","JSON","parse","map","val","key","deleteNote","styles","container","header","headerText","scrollContainer","footer","noteText","textInput","addNote","bind","addButton","addButtonText","d","Date","push","getFullYear","getMonth","getDate","splice","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderBottomWidth","borderBottomColor","color","fontSize","padding","marginBottom","position","bottom","left","right","zIndex","alignSelf","borderTopWidth","borderTopColor","width","height","borderRadius","elevation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  StyleSheet, Text, View, TextInput, ScrollView, TouchableOpacity, AsyncStorage,\r\n}\r\n  from 'react-native';\r\nimport Note from './Note';\r\n\r\n\r\nexport default class Main extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      noteArray: [],\r\n      notetext: ','\r\n    }\r\n  }\r\n\r\n  async storage(){\r\n    const notes = await AsyncStorage.getItem('notes');\r\n    if(notes&& notes.length > 0) {\r\n      this.setState({\r\n        notes:JSON.parse(notes)\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n\r\n    let notes = this.state.noteArray.map((val, key) => {\r\n      return <Note key={key} keyval={key} val={val}\r\n        deleteMethod={() => this.deleteNote(key)} />\r\n\r\n    });\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.headerText}>Add Notes</Text>\r\n        </View>\r\n        <ScrollView style={styles.scrollContainer}>\r\n         {notes}\r\n        </ScrollView>\r\n        <View style={styles.footer}>\r\n          <TextInput\r\n            onChangeText={(noteText) => this.setState({ noteText })}\r\n            value={this.state.noteText}\r\n            style={styles.textInput}\r\n            placeholder='your notes'\r\n            placeholderTextColor='white'>\r\n\r\n          </TextInput>\r\n        </View>\r\n        <TouchableOpacity onPress={this.addNote.bind(this)} style={styles.addButton}>\r\n          <Text style={styles.addButtonText}>+</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n  addNote() {\r\n    //alert('test');\r\n    if (this.state.notetext) {\r\n      let d = new Date();\r\n      this.state.noteArray.push({\r\n         'date': d.getFullYear() +\r\n         \"/\" + (d.getMonth() + 1) +\r\n         \"/\" + d.getDate(),\r\n         'note': this.state.noteText\r\n      });\r\n      this.setState({ noteArray: this.state.noteArray })\r\n      this.setState({noteText: ''})\r\n    }\r\n  }\r\n\r\n  deleteNote(key) {\r\n    this.state.noteArray.splice(key, 1);\r\n    this.setState({noteArray: this.state.noteArray})\r\n  }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n  header: {\r\n    backgroundColor: 'grey',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderBottomWidth: 10,\r\n    borderBottomColor: '#add',\r\n  },\r\n  headerText: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    padding: 26,\r\n  },\r\n  scrollContainer: {\r\n    flex: 1,\r\n    marginBottom: 100,\r\n  },\r\n  footer: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 10,\r\n  },\r\n  textInput: {\r\n    alignSelf: 'stretch',\r\n    color: '#fff',\r\n    padding: 20,\r\n    backgroundColor: '#252525',\r\n    borderTopWidth: 2,\r\n    borderTopColor: '#ededed',\r\n  },\r\n  addButton: {\r\n    position: 'absolute',\r\n    zIndex: 11,\r\n    right: 20,\r\n    bottom: 90,\r\n    backgroundColor: '#E91E63',\r\n    width: 90,\r\n    height: 90,\r\n    borderRadius: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    elevation: 8,\r\n  },\r\n  addButtonText: {\r\n    color: '#fff',\r\n    fontSize: 24,\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}